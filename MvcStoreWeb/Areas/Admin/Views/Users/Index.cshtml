@model IEnumerable<User>
@inject UserManager<User> userManager
@{
    ViewData["Title"] = "Üyeler";
}

<div class="card">
    <div class="card-body">
        <div class="py-2 form-inline">
            <form id="pageSizeForm" method="get" asp-action="Index">
                <input type="hidden" name="page" value="@ViewContext.HttpContext.Request.Query["page"]" />
                <partial name="PageSizeMenuPartial" model="@ViewContext.HttpContext.Request.Query["pageSize"].ToString()" />
            </form>
        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Email)</th>
                    <th>@Html.DisplayNameFor(model => model.UserName)</th>
                    <th>EMail Onay</th>
                    <th>Rol</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var roleName = (await userManager.GetRolesAsync(item)).First();
                    <tr>
                        <td>
                            @item.Name
                        </td>
                        <td>
                            @item.Email
                        </td>
                        <td>
                            @item.UserName
                        </td>
                        <td>
                            @if (item.EmailConfirmed)
                            {
                                <i class="fa fa-check text-success"></i>
                            }
                            else
                            {
                                <i class="fa fa-times text-danger"></i>
                            }
                        </td>
                        <td>
                            @if (roleName != "Administrators")
                            {
                                <partial name="RoleListPartial" model="new RoleListItemViewModel { CurrentRoleName = roleName, UserId = item.Id,  Role = new Role { Name = (await userManager.GetRolesAsync(item)).First() } }" />
                            }
                        </td>
                        <td>
                            @if (roleName != "Administrators")
                            {
                                @if (item.Enabled)
                                {
                                    <a asp-action="BanUser" asp-route-id="@item.Id" class="btn btn-danger ban-button">
                                        <i class="fa fa-ban"></i> Yasakla
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="UnbanUser" asp-route-id="@item.Id" class="btn btn-success unban-button">
                                        <i class="fa fa-check"></i> Yasak Kaldır
                                    </a>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(() => {
            $('.ban-button').click((e) => {
                Swal.fire({
                    icon: 'warning',
                    title: 'Uyarı',
                    html: 'Kullanıcı yasaklanacaktır. Devam etmek istiyormusunuz?',
                    showCancelButton: true,
                    cancelButtonText: 'İptal',
                    confirmButtonText: `<i class="fa fa-ban"></i> Yasakla`
                }).then(result => {
                    if (result.value) {
                        window.location = $(e.currentTarget).attr('href');
                    }
                });
                return false;
            });

            $('.unban-button').click((e) => {
                Swal.fire({
                    icon: 'warning',
                    title: 'Uyarı',
                    html: 'Kullanıcı yasağı kaldırılacaktır Devam etmek istiyormusunuz?',
                    showCancelButton: true,
                    cancelButtonText: 'İptal',
                    confirmButtonText: `<i class="fa fa-check"></i> Kaldır`
                }).then(result => {
                    if (result.value) {
                        window.location = $(e.currentTarget).attr('href');
                    }
                });
                return false;
            });


            $('.change-role-btn').click((e) => {
                Swal.fire({
                    icon: 'warning',
                    title: 'Uyarı',
                    html: 'Kullanıcı rolü değiştirilecektir. Devam etmek istiyormusunuz?',
                    showCancelButton: true,
                    cancelButtonText: 'İptal',
                    confirmButtonText: `<i class="fa fa-check"></i> Devam`
                }).then(result => {
                    if (result.value) {
                        const formId = $(e.currentTarget).attr('data-target');
                        $(`#${formId}`).submit();
                    }
                });
                return false;
            });

        });
    </script>
}