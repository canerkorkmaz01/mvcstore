<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MvcStoreWeb</title>
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body class="bg-light">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow">
            <div class="container">
                <a class="navbar-brand mr-4" asp-area="" asp-controller="Home" asp-action="Index">
                    MVC<b class="text-success">Store</b>
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <form class="flex-fill mr-4" novalidate>
                        <div class="input-group">
                            <input type="search" class="form-control" />
                            <div class="input-append">
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                    <ul class="navbar-nav">
                        @await Component.InvokeAsync("ShoppingCartButton")
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <span class="navbar-text">
                                    <i class="fa fa-user"></i>
                                    Hoşgeldini Sn. @User.FindFirst("FullName")?.Value
                                </span>
                            </li>
                            <li class="nav-item">
                                <a asp-controller="Account" asp-action="Logout" class="nav-link">
                                    <i class="fa fa-power-off"></i>
                                    Çıkış
                                </a>
                            </li>

                        }
                        else
                        {
                            <li class="nav-item">
                                <a asp-controller="Account" asp-action="Register" class="nav-link">
                                    <i class="fa fa-user-plus"></i>
                                    Yeni Üyelik
                                </a>
                            </li>
                            <li class="nav-item">
                                <a asp-controller="Account" asp-action="Login" class="nav-link">
                                    <i class="fa fa-sign-in-alt"></i>
                                    Üye Girişi
                                </a>
                            </li>
                        }

                    </ul>
                </div>
            </div>
        </nav>

    </header>
    <div class="container bg-white border-left border-right shadow">
        @await Component.InvokeAsync("RayonBar")
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - MvcStoreWeb - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>

        $(() => {
            $('[data-toggle=tooltip]').tooltip();
        });


            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })



            @if (TempData["success"] != null)
            {
                <text>
                Toast.fire({
                    icon: 'success',
                    title: '@TempData["success"]'
                })
                </text>
            }



            @if (TempData["error"] != null)
            {
                <text>
                Toast.fire({
                    icon: 'error',
                    title: '@TempData["error"]'
                })
                </text>
            }
    </script>
</body>
</html>
